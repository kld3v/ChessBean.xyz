/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: anybody (https://sketchfab.com/anybody)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/chess-board-and-figures-d6d3cd6d2d2a4a13bd16d0667410cf1e
Title: Chess Board And Figures
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
	nodes: {
		Object_4: THREE.Mesh
		Object_5: THREE.Mesh
		Object_6: THREE.Mesh
		Object_8: THREE.Mesh
		Object_10: THREE.Mesh
		Object_12: THREE.Mesh
		Object_14: THREE.Mesh
		Object_16: THREE.Mesh
		Object_18: THREE.Mesh
		Object_20: THREE.Mesh
		Object_22: THREE.Mesh
		Object_24: THREE.Mesh
		Object_26: THREE.Mesh
		Object_28: THREE.Mesh
		Object_30: THREE.Mesh
		Object_32: THREE.Mesh
		Object_34: THREE.Mesh
		Object_36: THREE.Mesh
		Object_38: THREE.Mesh
		Object_40: THREE.Mesh
		Object_42: THREE.Mesh
		Object_44: THREE.Mesh
		Object_46: THREE.Mesh
		Object_48: THREE.Mesh
		Object_50: THREE.Mesh
		Object_52: THREE.Mesh
		Object_54: THREE.Mesh
		Object_56: THREE.Mesh
		Object_58: THREE.Mesh
		Object_60: THREE.Mesh
		Object_62: THREE.Mesh
		Object_64: THREE.Mesh
		Object_66: THREE.Mesh
		Object_68: THREE.Mesh
		Object_70: THREE.Mesh
	}
	materials: {
		Material_37: THREE.MeshStandardMaterial
		Material_36: THREE.MeshStandardMaterial
		['Material.001']: THREE.MeshStandardMaterial
		['Figures.Black']: THREE.MeshStandardMaterial
		['Figures.White']: THREE.MeshStandardMaterial
	}
}

interface IPositions {
	globalBoardPositions: { [key: string]: number[] }
	setChessMoveToSubmitToGame: any
}

export function Board(props: JSX.IntrinsicElements['group'] & IPositions) {
	const { nodes, materials } = useGLTF(
		'./chess_board_and_figures.glb'
	) as GLTFResult

	const { globalBoardPositions, setChessMoveToSubmitToGame } = props
	return (
		<group
			{...props}
			dispose={null}
		>
			<group
				rotation={[-Math.PI / 2, 0, -Math.PI]}
				scale={2}
				position={[0, -0.1, 0]}
			>
				<group rotation={[Math.PI / 2, 0, 0]}>
					<group
						position={[0, -0.043, 0]}
						scale={0.025}
					>
						<mesh
							castShadow
							receiveShadow
							geometry={nodes.Object_4.geometry}
							material={materials.Material_37}
						/>
						<mesh
							castShadow
							receiveShadow
							geometry={nodes.Object_5.geometry}
							material={materials.Material_36}
						/>
						<mesh
							castShadow
							receiveShadow
							geometry={nodes.Object_6.geometry}
							material={materials['Material.001']}
						/>
					</group>
					<mesh
						castShadow
						receiveShadow
						name='blackKing'
						geometry={nodes.Object_8.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'K',
								pieceName: 'blackKing',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackKing[0],
							0.616,
							globalBoardPositions.blackKing[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.034, 0.034, 0.034]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackQueen'
						geometry={nodes.Object_10.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'Q',
								pieceName: 'blackQueen',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackQueen[0],
							0.444,
							globalBoardPositions.blackQueen[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.034, 0.034, 0.034]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackBishopBlack'
						geometry={nodes.Object_12.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'B',
								pieceName: 'blackBishopBlack',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackBishopBlack[0],
							0.302,
							globalBoardPositions.blackBishopBlack[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackBKnight'
						geometry={nodes.Object_14.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'N',
								pieceName: 'blackBKnight',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackBKnight[0],
							0.304,
							globalBoardPositions.blackBKnight[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackARook'
						geometry={nodes.Object_16.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'R',
								pieceName: 'blackARook',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackARook[0],
							0.246,
							globalBoardPositions.blackARook[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackAPawn'
						geometry={nodes.Object_18.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackAPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackAPawn[0],
							0.165,
							globalBoardPositions.blackAPawn[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackBPawn'
						geometry={nodes.Object_20.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackBPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackBPawn[0],
							0.165,
							globalBoardPositions.blackBPawn[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackCPawn'
						geometry={nodes.Object_22.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackCPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackCPawn[0],
							0.165,
							globalBoardPositions.blackCPawn[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackDPawn'
						geometry={nodes.Object_24.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackDPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackDPawn[0],
							0.165,
							globalBoardPositions.blackDPawn[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackEPawn'
						geometry={nodes.Object_26.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackEPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackEPawn[0],
							0.165,
							globalBoardPositions.blackEPawn[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackFPawn'
						geometry={nodes.Object_28.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackFPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackFPawn[0],
							0.165,
							globalBoardPositions.blackFPawn[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackGPawn'
						geometry={nodes.Object_30.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackGPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackGPawn[0],
							0.165,
							globalBoardPositions.blackGPawn[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackHPawn'
						geometry={nodes.Object_32.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackHPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackHPawn[0],
							0.165,
							globalBoardPositions.blackHPawn[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackBishopWhite'
						geometry={nodes.Object_34.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'B',
								pieceName: 'blackBishopWhite',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackBishopWhite[0],
							0.302,
							globalBoardPositions.blackBishopWhite[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackGKnight'
						geometry={nodes.Object_36.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'N',
								pieceName: 'blackGKnight',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'b',
							})
						}}
						position={[
							globalBoardPositions.blackGKnight[0],
							0.304,
							globalBoardPositions.blackGKnight[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='blackHRook'
						geometry={nodes.Object_38.geometry}
						material={materials['Figures.Black']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'blackHRook',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.blackHRook[0],
							0.246,
							globalBoardPositions.blackHRook[1],
						]}
						rotation={[Math.PI / 2, 0, -Math.PI]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteQueen'
						geometry={nodes.Object_40.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'Q',
								pieceName: 'whiteQueen',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteQueen[0],
							0.616,
							globalBoardPositions.whiteQueen[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.034, 0.034, 0.034]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteKing'
						geometry={nodes.Object_42.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'K',
								pieceName: 'whiteKing',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteKing[0],
							0.444,
							globalBoardPositions.whiteKing[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.034, 0.034, 0.034]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteBishopBlack'
						geometry={nodes.Object_44.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'whiteBishopBlack',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteBishopBlack[0],
							0.302,
							globalBoardPositions.whiteBishopBlack[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteGKnight'
						geometry={nodes.Object_46.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'N',
								pieceName: 'whiteGKnight',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteGKnight[0],
							0.304,
							globalBoardPositions.whiteGKnight[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteHRook'
						geometry={nodes.Object_48.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'R',
								pieceName: 'whiteHRook',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteHRook[1],
							0.246,
							globalBoardPositions.whiteHRook[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteHPawn'
						geometry={nodes.Object_50.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'whiteHPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteHPawn[0],
							0.165,
							globalBoardPositions.whiteHPawn[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteBishopwhite'
						geometry={nodes.Object_52.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'B',
								pieceName: 'whiteBishopwhite',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteBishopwhite[0],
							0.302,
							globalBoardPositions.whiteBishopwhite[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteBKnight'
						geometry={nodes.Object_54.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'N',
								pieceName: 'whiteBKnight',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteBKnight[0],
							0.304,
							globalBoardPositions.whiteBKnight[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteARook'
						geometry={nodes.Object_56.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'R',
								pieceName: 'whiteARook',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteARook[0],
							0.246,
							globalBoardPositions.whiteARook[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={0.034}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteGPawn'
						geometry={nodes.Object_58.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'whiteGPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteGPawn[0],
							0.165,
							globalBoardPositions.whiteGPawn[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteFPawn'
						geometry={nodes.Object_60.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'whiteFPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteFPawn[0],
							0.165,
							globalBoardPositions.whiteFPawn[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteEPawn'
						geometry={nodes.Object_62.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'whiteEPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteEPawn[0],
							0.165,
							globalBoardPositions.whiteEPawn[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteDPawn'
						geometry={nodes.Object_64.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'whiteDPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteDPawn[0],
							0.165,
							globalBoardPositions.whiteDPawn[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteCPawn'
						geometry={nodes.Object_66.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'whiteCPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteCPawn[0],
							0.165,
							globalBoardPositions.whiteCPawn[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteBPawn'
						geometry={nodes.Object_68.geometry}
						material={materials['Figures.White']}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: '',
								pieceName: 'whiteBPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
						position={[
							globalBoardPositions.whiteBPawn[0],
							0.165,
							globalBoardPositions.whiteBPawn[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.025, 0.025, 0.025]}
					/>
					<mesh
						castShadow
						receiveShadow
						name='whiteAPawn'
						geometry={nodes.Object_70.geometry}
						material={materials['Figures.White']}
						position={[
							globalBoardPositions.whiteAPawn[0],
							0.165,
							globalBoardPositions.whiteAPawn[1],
						]}
						rotation={[Math.PI / 2, 0, 0]}
						scale={[-0.025, 0.025, 0.025]}
						onClick={(e) => {
							e.stopPropagation()
							setChessMoveToSubmitToGame({
								piece: 'P',
								pieceName: 'whiteAPawn',
								coord: '',
								readyToSubmit: false,
								pieceColor: 'w',
							})
						}}
					/>
				</group>
			</group>
		</group>
	)
}

export default Board

useGLTF.preload('/chess_board_and_figures.glb')
